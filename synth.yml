Resources:
  DbSecret685A0FA5:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"root"}'
    Metadata:
      aws:cdk:path: RdsIssueStack/DbSecret/Resource
  DbSecretAttachment0609CE05:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: DbSecret685A0FA5
      TargetId:
        Ref: AuroraServerlessClusterB4A18EF1
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: RdsIssueStack/DbSecret/Attachment/Resource
  RDSVPC2E641863:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: RdsIssueStack/RDSVPC
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/Resource
  RDSVPCPublicSubnet1SubnetDCA7847D:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: RDSVPC2E641863
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet1/Subnet
  RDSVPCPublicSubnet1RouteTable07DDE0D6:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: RDSVPC2E641863
      Tags:
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet1/RouteTable
  RDSVPCPublicSubnet1RouteTableAssociationBEAD771D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RDSVPCPublicSubnet1RouteTable07DDE0D6
      SubnetId:
        Ref: RDSVPCPublicSubnet1SubnetDCA7847D
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet1/RouteTableAssociation
  RDSVPCPublicSubnet1DefaultRouteC30FC52E:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RDSVPCPublicSubnet1RouteTable07DDE0D6
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: RDSVPCIGWDE0579A7
    DependsOn:
      - RDSVPCVPCGW8F90888C
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet1/DefaultRoute
  RDSVPCPublicSubnet1EIPAF87146A:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet1/EIP
  RDSVPCPublicSubnet1NATGatewayAB878E4D:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: RDSVPCPublicSubnet1SubnetDCA7847D
      AllocationId:
        Fn::GetAtt:
          - RDSVPCPublicSubnet1EIPAF87146A
          - AllocationId
      Tags:
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet1/NATGateway
  RDSVPCPublicSubnet2SubnetB01D4199:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: RDSVPC2E641863
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet2/Subnet
  RDSVPCPublicSubnet2RouteTableBE200FA1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: RDSVPC2E641863
      Tags:
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet2/RouteTable
  RDSVPCPublicSubnet2RouteTableAssociationE297C42E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RDSVPCPublicSubnet2RouteTableBE200FA1
      SubnetId:
        Ref: RDSVPCPublicSubnet2SubnetB01D4199
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet2/RouteTableAssociation
  RDSVPCPublicSubnet2DefaultRouteA6DD48DB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RDSVPCPublicSubnet2RouteTableBE200FA1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: RDSVPCIGWDE0579A7
    DependsOn:
      - RDSVPCVPCGW8F90888C
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet2/DefaultRoute
  RDSVPCPublicSubnet2EIP4BE1B563:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet2/EIP
  RDSVPCPublicSubnet2NATGatewayC860E12B:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: RDSVPCPublicSubnet2SubnetB01D4199
      AllocationId:
        Fn::GetAtt:
          - RDSVPCPublicSubnet2EIP4BE1B563
          - AllocationId
      Tags:
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PublicSubnet2/NATGateway
  RDSVPCPrivateSubnet1SubnetA484341B:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: RDSVPC2E641863
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PrivateSubnet1/Subnet
  RDSVPCPrivateSubnet1RouteTableABA9F807:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: RDSVPC2E641863
      Tags:
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PrivateSubnet1/RouteTable
  RDSVPCPrivateSubnet1RouteTableAssociation227805DB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RDSVPCPrivateSubnet1RouteTableABA9F807
      SubnetId:
        Ref: RDSVPCPrivateSubnet1SubnetA484341B
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PrivateSubnet1/RouteTableAssociation
  RDSVPCPrivateSubnet1DefaultRoute6396A0F8:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RDSVPCPrivateSubnet1RouteTableABA9F807
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: RDSVPCPublicSubnet1NATGatewayAB878E4D
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PrivateSubnet1/DefaultRoute
  RDSVPCPrivateSubnet2Subnet39872682:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: RDSVPC2E641863
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PrivateSubnet2/Subnet
  RDSVPCPrivateSubnet2RouteTable37F82D3A:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: RDSVPC2E641863
      Tags:
        - Key: Name
          Value: RdsIssueStack/RDSVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PrivateSubnet2/RouteTable
  RDSVPCPrivateSubnet2RouteTableAssociation3F48712E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RDSVPCPrivateSubnet2RouteTable37F82D3A
      SubnetId:
        Ref: RDSVPCPrivateSubnet2Subnet39872682
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PrivateSubnet2/RouteTableAssociation
  RDSVPCPrivateSubnet2DefaultRouteD4A61FCC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RDSVPCPrivateSubnet2RouteTable37F82D3A
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: RDSVPCPublicSubnet2NATGatewayC860E12B
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/PrivateSubnet2/DefaultRoute
  RDSVPCIGWDE0579A7:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: RdsIssueStack/RDSVPC
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/IGW
  RDSVPCVPCGW8F90888C:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: RDSVPC2E641863
      InternetGatewayId:
        Ref: RDSVPCIGWDE0579A7
    Metadata:
      aws:cdk:path: RdsIssueStack/RDSVPC/VPCGW
  AuroraServerlessClusterSubnets734AF39A:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for AuroraServerlessCluster database
      SubnetIds:
        - Ref: RDSVPCPrivateSubnet1SubnetA484341B
        - Ref: RDSVPCPrivateSubnet2Subnet39872682
    Metadata:
      aws:cdk:path: RdsIssueStack/AuroraServerlessCluster/Subnets/Default
  AuroraServerlessClusterSecurityGroup5A67466E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: RDSVPC2E641863
    Metadata:
      aws:cdk:path: RdsIssueStack/AuroraServerlessCluster/SecurityGroup/Resource
  AuroraServerlessClusterB4A18EF1:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-postgresql
      DatabaseName: test
      DBClusterParameterGroupName: default.aurora-postgresql10
      DBSubnetGroupName:
        Ref: AuroraServerlessClusterSubnets734AF39A
      EnableHttpEndpoint: true
      EngineMode: serverless
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DbSecret685A0FA5
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DbSecret685A0FA5
            - :SecretString:password::}}
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - AuroraServerlessClusterSecurityGroup5A67466E
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: RdsIssueStack/AuroraServerlessCluster/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE21RwW7CMAz9lt1DWDnsPFYmxAVVFHF3U8MCbYJsB4Sq/vsSQO2m7eSX55dnvyTTWZbp15d3uPLE1KdpZzyh7koBc1IbZB/IoMq9Y6FgROV7N7J7Fxu1Fetdr5JDRzXrbgECFTCWaAhFlUgXpAaZ8yawIKkyVA5lST6ck8ni4w/xVPaK7x7cgoMDku5id7BNZQt0QJlL3PerRXdf8P9Or9DMdLc7m6TZFbkqQtVY85h9vzegjQ+CW6gaHPmRmzN7YyHFHsQJfK6KVNYgSxC8wk0VZC8RjsYrF1OlqE/BY5Pn6UeKGCGQldvwJL+Ivu+V8zXqI08v2ZuexR88srUTCk5si3rzqN/eviF93gEAAA==
    Metadata:
      aws:cdk:path: RdsIssueStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

